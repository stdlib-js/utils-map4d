{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArrayLikeObject from '@stdlib/assert-is-array-like-object';\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/string-format';\n\n\n// MAIN //\n\n/**\n* Applies a function to each nested element in a four-dimensional nested array and assigns the result to a nested element in a new four-dimensional nested array.\n*\n* ## Notes\n*\n* -   The applied function is provided the following arguments:\n*\n*     -   **value**: array element.\n*     -   **indices**: current array element indices.\n*     -   **arr**: input array.\n*\n* @param {ArrayLikeObject<ArrayLikeObject>} arr - four-dimensional nested array\n* @param {Function} fcn - function to apply\n* @param {*} [thisArg] - function execution context\n* @throws {TypeError} first argument must be a four-dimensional nested array\n* @throws {TypeError} second argument must be a function\n* @returns {ArrayArray} four-dimensional nested array\n*\n* @example\n* import naryFunction from '@stdlib/utils-nary-function';\n* import abs from '@stdlib/math-base-special-abs';\n*\n* var arr = [\n*     [ [ [ -1, -2, -3 ] ] ],\n*     [ [ [ -4, -5, -6 ] ] ]\n* ];\n*\n* var out = map4d( arr, naryFunction( abs, 1 ) );\n* // returns [ [ [ [ 1, 2, 3 ] ] ], [ [ [ 4, 5, 6 ] ] ] ]\n*/\nfunction map4d( arr, fcn, thisArg ) {\n\tvar out;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar a1;\n\tvar a2;\n\tvar a3;\n\tvar S0;\n\tvar S1;\n\tvar S2;\n\tvar S3;\n\tvar i0;\n\tvar i1;\n\tvar i2;\n\tvar i3;\n\n\tif ( !isArrayLikeObject( arr ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an array-like object. Value: `%s`.', arr ) );\n\t}\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tS0 = arr.length;\n\tout = [];\n\tfor ( i0 = 0; i0 < S0; i0++ ) {\n\t\ta1 = arr[ i0 ];\n\t\tif ( !isArrayLikeObject( a1 ) ) { // note: cannot support the more general \"collections\" here (which includes typed arrays having more than 2^32-1 elements), as the output array is limited to 2^32-1 elements; thus, we opt for the lowest common denominator: generic arrays\n\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a four-dimensional nested array. Index: `%u`. Value: `%s`.', i0, a1 ) );\n\t\t}\n\t\tS1 = a1.length;\n\t\tt1 = [];\n\t\tfor ( i1 = 0; i1 < S1; i1++ ) {\n\t\t\ta2 = a1[ i1 ];\n\t\t\tif ( !isArrayLikeObject( a2 ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a four-dimensional nested array. Indices: (%u, %u). Value: `%s`.', i0, i1, a2 ) );\n\t\t\t}\n\t\t\tS2 = a2.length;\n\t\t\tt2 = [];\n\t\t\tfor ( i2 = 0; i2 < S2; i2++ ) {\n\t\t\t\ta3 = a2[ i2 ];\n\t\t\t\tif ( !isArrayLikeObject( a3 ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid argument. First argument must be a four-dimensional nested array. Indices: (%u, %u, %u). Value: `%s`.', i0, i1, i2, a3 ) );\n\t\t\t\t}\n\t\t\t\tS3 = a3.length;\n\t\t\t\tt3 = [];\n\t\t\t\tfor ( i3 = 0; i3 < S3; i3++ ) {\n\t\t\t\t\tt3.push( fcn.call( thisArg, a3[ i3 ], [ i0, i1, i2, i3 ], arr ) ); // eslint-disable-line max-len\n\t\t\t\t}\n\t\t\t\tt2.push( t3 );\n\t\t\t}\n\t\t\tt1.push( t2 );\n\t\t}\n\t\tout.push( t1 );\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default map4d;\n"],"names":["map4d","arr","fcn","thisArg","out","t1","t2","t3","a1","a2","a3","S0","S1","S2","S3","i0","i1","i2","i3","isArrayLikeObject","TypeError","format","isFunction","length","push","call"],"mappings":";;2RA2DA,SAASA,EAAOC,EAAKC,EAAKC,GACzB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,IAAMC,EAAmBlB,GACxB,MAAM,IAAImB,UAAWC,EAAQ,8EAA+EpB,IAE7G,IAAMqB,EAAYpB,GACjB,MAAM,IAAIkB,UAAWC,EAAQ,qEAAsEnB,IAIpG,IAFAS,EAAKV,EAAIsB,OACTnB,EAAM,GACAW,EAAK,EAAGA,EAAKJ,EAAII,IAAO,CAE7B,GADAP,EAAKP,EAAKc,IACJI,EAAmBX,GACxB,MAAM,IAAIY,UAAWC,EAAQ,sGAAuGN,EAAIP,IAIzI,IAFAI,EAAKJ,EAAGe,OACRlB,EAAK,GACCW,EAAK,EAAGA,EAAKJ,EAAII,IAAO,CAE7B,GADAP,EAAKD,EAAIQ,IACHG,EAAmBV,GACxB,MAAM,IAAIW,UAAWC,EAAQ,4GAA6GN,EAAIC,EAAIP,IAInJ,IAFAI,EAAKJ,EAAGc,OACRjB,EAAK,GACCW,EAAK,EAAGA,EAAKJ,EAAII,IAAO,CAE7B,GADAP,EAAKD,EAAIQ,IACHE,EAAmBT,GACxB,MAAM,IAAIU,UAAWC,EAAQ,gHAAiHN,EAAIC,EAAIC,EAAIP,IAI3J,IAFAI,EAAKJ,EAAGa,OACRhB,EAAK,GACCW,EAAK,EAAGA,EAAKJ,EAAII,IACtBX,EAAGiB,KAAMtB,EAAIuB,KAAMtB,EAASO,EAAIQ,GAAM,CAAEH,EAAIC,EAAIC,EAAIC,GAAMjB,IAE3DK,EAAGkB,KAAMjB,EACT,CACDF,EAAGmB,KAAMlB,EACT,CACDF,EAAIoB,KAAMnB,EACV,CACD,OAAOD,CACR"}